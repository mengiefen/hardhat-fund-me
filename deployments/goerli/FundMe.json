{
  "address": "0x6b757FB2ff7432194a85D76E8265a47674e3582b",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x920085779843498e0ac587cc6042eee89885cf74a016f9bc2bf7eadd70ecf916",
  "receipt": {
    "to": null,
    "from": "0x04E1B236182b9703535ecB490697b79B45453Ba1",
    "contractAddress": "0x6b757FB2ff7432194a85D76E8265a47674e3582b",
    "transactionIndex": 242,
    "gasUsed": "1002956",
    "logsBloom": "0x
    "blockHash": "0x54555f1be7c70e8707205fc8c4cb042c21a0f6b36d4b1a3e842792f99dce3cde",
    "transactionHash": "0x920085779843498e0ac587cc6042eee89885cf74a016f9bc2bf7eadd70ecf916",
    "logs": [],
    "blockNumber": 8243115,
    "cumulativeGasUsed": "14425905",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 2,
  "solcInputHash": "b441ebd6b5d525485753f214f91a4915",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Mengstu Fentaw with Patrick Collins\",\"details\":\"All function calls are currently implement without side effects\",\"kind\":\"dev\",\"methods\":{},\"title\":\"a contract that allows people to send ETH to it and store it\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"you can use this contract for only the most basic simulation\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// PRAGMA\\npragma solidity ^0.8.8;\\n\\n// IMPORTS\\nimport './PriceConverter.sol';\\n\\n// ERROR CODES\\n\\nerror FundMe__NotOwner();\\n\\n// INTERFACES,LIBRARIES, or CONTRACT\\n\\n/** @title a contract that allows people to send ETH to it and store it\\n *  @author Mengstu Fentaw with Patrick Collins\\n *  @notice you can use this contract for only the most basic simulation\\n *  @dev All function calls are currently implement without side effects\\n */\\n\\ncontract FundMe {\\n    // Type declarations\\n    using PriceConverter for uint256;\\n\\n    // State variables\\n    uint256 public constant MINIMUM_USD = 50;\\n    address[] private s_funders;\\n    address private immutable i_owner;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    // Events\\n\\n    // Modifiers\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    // Functions\\n    // Constructor\\n    constructor(address priceFeedAddress) {\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n        i_owner = msg.sender;\\n    }\\n\\n    // // Receive function\\n    // receive() external payable {\\n    //     fund();\\n    // }\\n\\n    // // Fallback function\\n\\n    // fallback() external payable {\\n    //     fund();\\n    // }\\n\\n    // External functions\\n\\n    // Public functions\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"Didn't send required amount of USD\\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n\\n        (bool success, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }('');\\n\\n        require(success, 'Failed to withdraw money to owner');\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders; // mappings can't be in memory\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n\\n        (bool success, ) = i_owner.call{value: address(this).balance}('');\\n\\n        require(success, 'Failed to withdraw money to owner');\\n    }\\n\\n    // Internal functions\\n    function getVersion() internal view returns (uint256) {\\n        return s_priceFeed.version();\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunders(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(\\n        address funder\\n    ) public view returns (uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x719ba2932c3d68a8498fdd97c28082f1fcfeac7d44378e212abdb6cd8c7dd7ad\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\nimport '@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol';\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        // We need ABI, and Address\\n        // Address: 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //   0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        // );\\n        (, int256 price, , , ) = priceFeed.latestRoundData(); // ETH in terms of USD\\n\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUSD = (ethPrice * ethAmount) / 1e18;\\n\\n        return ethAmountInUSD;\\n    }\\n}\\n\",\"keccak256\":\"0x01e332b00164fad3da6de7f534783fd0194947c49f92ce911ae143f9a9b01a40\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012483803806200124883398181016040528101906200003791906200011d565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b6080516110c8620001806000396000818161022b01528181610472015281816105f501526107eb01526110c86000f3fe60806040526004361061007b5760003560e01c8063893d20e81161004e578063893d20e81461012f5780639e87a5cd1461015a578063b60d428814610185578063be2693f01461018f5761007b565b80630343fb25146100805780633a7b6c74146100bd5780633ccfd60b146100fa5780636b69a59214610104575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a8e565b610199565b6040516100b49190610ad4565b60405180910390f35b3480156100c957600080fd5b506100e460048036038101906100df9190610b1b565b6101e2565b6040516100f19190610b57565b60405180910390f35b610102610229565b005b34801561011057600080fd5b50610119610469565b6040516101269190610ad4565b60405180910390f35b34801561013b57600080fd5b5061014461046e565b6040516101519190610b57565b60405180910390f35b34801561016657600080fd5b5061016f610496565b60405161017c9190610bd1565b60405180910390f35b61018d6104c0565b005b6101976105f3565b005b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008082815481106101f7576101f6610bec565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ae576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103595760008082815481106102d3576102d2610bec565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061035190610c4a565b9150506102b1565b50600067ffffffffffffffff81111561037557610374610c92565b5b6040519080825280602002602001820160405280156103a35781602001602082028036833780820191505090505b50600090805190602001906103b9929190610984565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103e090610cf2565b60006040518083038185875af1925050503d806000811461041d576040519150601f19603f3d011682016040523d82523d6000602084013e610422565b606091505b5050905080610466576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045d90610d8a565b60405180910390fd5b50565b603281565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60326104f7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108b790919063ffffffff16565b1015610538576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052f90610e1c565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105ea9190610e3c565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610678576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106fb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106b1575b5050505050905060005b815181101561078657600082828151811061072357610722610bec565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061077e90610c4a565b915050610705565b50600067ffffffffffffffff8111156107a2576107a1610c92565b5b6040519080825280602002602001820160405280156107d05781602001602082028036833780820191505090505b50600090805190602001906107e6929190610984565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161082d90610cf2565b60006040518083038185875af1925050503d806000811461086a576040519150601f19603f3d011682016040523d82523d6000602084013e61086f565b606091505b50509050806108b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108aa90610d8a565b60405180910390fd5b5050565b6000806108c3836108f3565b90506000670de0b6b3a764000085836108dc9190610e70565b6108e69190610ee1565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610941573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109659190610f9f565b5050509150506402540be4008161097c919061101a565b915050919050565b8280548282559060005260206000209081019282156109fd579160200282015b828111156109fc5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109a4565b5b509050610a0a9190610a0e565b5090565b5b80821115610a27576000816000905550600101610a0f565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a5b82610a30565b9050919050565b610a6b81610a50565b8114610a7657600080fd5b50565b600081359050610a8881610a62565b92915050565b600060208284031215610aa457610aa3610a2b565b5b6000610ab284828501610a79565b91505092915050565b6000819050919050565b610ace81610abb565b82525050565b6000602082019050610ae96000830184610ac5565b92915050565b610af881610abb565b8114610b0357600080fd5b50565b600081359050610b1581610aef565b92915050565b600060208284031215610b3157610b30610a2b565b5b6000610b3f84828501610b06565b91505092915050565b610b5181610a50565b82525050565b6000602082019050610b6c6000830184610b48565b92915050565b6000819050919050565b6000610b97610b92610b8d84610a30565b610b72565b610a30565b9050919050565b6000610ba982610b7c565b9050919050565b6000610bbb82610b9e565b9050919050565b610bcb81610bb0565b82525050565b6000602082019050610be66000830184610bc2565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c5582610abb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c8757610c86610c1b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cdc600083610cc1565b9150610ce782610ccc565b600082019050919050565b6000610cfd82610ccf565b9150819050919050565b600082825260208201905092915050565b7f4661696c656420746f207769746864726177206d6f6e657920746f206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000610d74602183610d07565b9150610d7f82610d18565b604082019050919050565b60006020820190508181036000830152610da381610d67565b9050919050565b7f4469646e27742073656e6420726571756972656420616d6f756e74206f66205560008201527f5344000000000000000000000000000000000000000000000000000000000000602082015250565b6000610e06602283610d07565b9150610e1182610daa565b604082019050919050565b60006020820190508181036000830152610e3581610df9565b9050919050565b6000610e4782610abb565b9150610e5283610abb565b9250828201905080821115610e6a57610e69610c1b565b5b92915050565b6000610e7b82610abb565b9150610e8683610abb565b9250828202610e9481610abb565b91508282048414831517610eab57610eaa610c1b565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610eec82610abb565b9150610ef783610abb565b925082610f0757610f06610eb2565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f3181610f12565b8114610f3c57600080fd5b50565b600081519050610f4e81610f28565b92915050565b6000819050919050565b610f6781610f54565b8114610f7257600080fd5b50565b600081519050610f8481610f5e565b92915050565b600081519050610f9981610aef565b92915050565b600080600080600060a08688031215610fbb57610fba610a2b565b5b6000610fc988828901610f3f565b9550506020610fda88828901610f75565b9450506040610feb88828901610f8a565b9350506060610ffc88828901610f8a565b925050608061100d88828901610f3f565b9150509295509295909350565b600061102582610f54565b915061103083610f54565b925082820261103e81610f54565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561107657611075610c1b565b5b828205841483151761108b5761108a610c1b565b5b509291505056fea264697066735822122026a8157c8ef0628be4f2e74b7c0b50ae5ebf18fc29d6067fb79bda95088d519964736f6c63430008110033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c8063893d20e81161004e578063893d20e81461012f5780639e87a5cd1461015a578063b60d428814610185578063be2693f01461018f5761007b565b80630343fb25146100805780633a7b6c74146100bd5780633ccfd60b146100fa5780636b69a59214610104575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a8e565b610199565b6040516100b49190610ad4565b60405180910390f35b3480156100c957600080fd5b506100e460048036038101906100df9190610b1b565b6101e2565b6040516100f19190610b57565b60405180910390f35b610102610229565b005b34801561011057600080fd5b50610119610469565b6040516101269190610ad4565b60405180910390f35b34801561013b57600080fd5b5061014461046e565b6040516101519190610b57565b60405180910390f35b34801561016657600080fd5b5061016f610496565b60405161017c9190610bd1565b60405180910390f35b61018d6104c0565b005b6101976105f3565b005b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008082815481106101f7576101f6610bec565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ae576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103595760008082815481106102d3576102d2610bec565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061035190610c4a565b9150506102b1565b50600067ffffffffffffffff81111561037557610374610c92565b5b6040519080825280602002602001820160405280156103a35781602001602082028036833780820191505090505b50600090805190602001906103b9929190610984565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103e090610cf2565b60006040518083038185875af1925050503d806000811461041d576040519150601f19603f3d011682016040523d82523d6000602084013e610422565b606091505b5050905080610466576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045d90610d8a565b60405180910390fd5b50565b603281565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60326104f7600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108b790919063ffffffff16565b1015610538576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052f90610e1c565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105ea9190610e3c565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610678576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106fb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106b1575b5050505050905060005b815181101561078657600082828151811061072357610722610bec565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061077e90610c4a565b915050610705565b50600067ffffffffffffffff8111156107a2576107a1610c92565b5b6040519080825280602002602001820160405280156107d05781602001602082028036833780820191505090505b50600090805190602001906107e6929190610984565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161082d90610cf2565b60006040518083038185875af1925050503d806000811461086a576040519150601f19603f3d011682016040523d82523d6000602084013e61086f565b606091505b50509050806108b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108aa90610d8a565b60405180910390fd5b5050565b6000806108c3836108f3565b90506000670de0b6b3a764000085836108dc9190610e70565b6108e69190610ee1565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610941573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109659190610f9f565b5050509150506402540be4008161097c919061101a565b915050919050565b8280548282559060005260206000209081019282156109fd579160200282015b828111156109fc5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109a4565b5b509050610a0a9190610a0e565b5090565b5b80821115610a27576000816000905550600101610a0f565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a5b82610a30565b9050919050565b610a6b81610a50565b8114610a7657600080fd5b50565b600081359050610a8881610a62565b92915050565b600060208284031215610aa457610aa3610a2b565b5b6000610ab284828501610a79565b91505092915050565b6000819050919050565b610ace81610abb565b82525050565b6000602082019050610ae96000830184610ac5565b92915050565b610af881610abb565b8114610b0357600080fd5b50565b600081359050610b1581610aef565b92915050565b600060208284031215610b3157610b30610a2b565b5b6000610b3f84828501610b06565b91505092915050565b610b5181610a50565b82525050565b6000602082019050610b6c6000830184610b48565b92915050565b6000819050919050565b6000610b97610b92610b8d84610a30565b610b72565b610a30565b9050919050565b6000610ba982610b7c565b9050919050565b6000610bbb82610b9e565b9050919050565b610bcb81610bb0565b82525050565b6000602082019050610be66000830184610bc2565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c5582610abb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c8757610c86610c1b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cdc600083610cc1565b9150610ce782610ccc565b600082019050919050565b6000610cfd82610ccf565b9150819050919050565b600082825260208201905092915050565b7f4661696c656420746f207769746864726177206d6f6e657920746f206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000610d74602183610d07565b9150610d7f82610d18565b604082019050919050565b60006020820190508181036000830152610da381610d67565b9050919050565b7f4469646e27742073656e6420726571756972656420616d6f756e74206f66205560008201527f5344000000000000000000000000000000000000000000000000000000000000602082015250565b6000610e06602283610d07565b9150610e1182610daa565b604082019050919050565b60006020820190508181036000830152610e3581610df9565b9050919050565b6000610e4782610abb565b9150610e5283610abb565b9250828201905080821115610e6a57610e69610c1b565b5b92915050565b6000610e7b82610abb565b9150610e8683610abb565b9250828202610e9481610abb565b91508282048414831517610eab57610eaa610c1b565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610eec82610abb565b9150610ef783610abb565b925082610f0757610f06610eb2565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f3181610f12565b8114610f3c57600080fd5b50565b600081519050610f4e81610f28565b92915050565b6000819050919050565b610f6781610f54565b8114610f7257600080fd5b50565b600081519050610f8481610f5e565b92915050565b600081519050610f9981610aef565b92915050565b600080600080600060a08688031215610fbb57610fba610a2b565b5b6000610fc988828901610f3f565b9550506020610fda88828901610f75565b9450506040610feb88828901610f8a565b9350506060610ffc88828901610f8a565b925050608061100d88828901610f3f565b9150509295509295909350565b600061102582610f54565b915061103083610f54565b925082820261103e81610f54565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561107657611075610c1b565b5b828205841483151761108b5761108a610c1b565b5b509291505056fea264697066735822122026a8157c8ef0628be4f2e74b7c0b50ae5ebf18fc29d6067fb79bda95088d519964736f6c63430008110033",
  "devdoc": {
    "author": "Mengstu Fentaw with Patrick Collins",
    "details": "All function calls are currently implement without side effects",
    "kind": "dev",
    "methods": {},
    "title": "a contract that allows people to send ETH to it and store it",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "you can use this contract for only the most basic simulation",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 60,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 69,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}